local lean = "Gazer"
local loan = lean
local gaysex = "Gazer Fe Animation Editor"
local Kakakak = "Tentu Gw Obfuscate Kontol"
local function bypassio()
local gui = Instance.new("ScreenGui")
gui.Name = lean .. "Gui"
gui.Parent = game.CoreGui

--///Made By G–∞z–µr_HA///--

local replacements = {
    A = "üÖ∞ùêí", B = "üÖ±", C = "üÖ≤", D = "üÖ≥", 
    E = "üÖ¥", F = "üÖµ", G = "üÖ∂ùêí", H = "üÖ∑", 
    I = "üÖ∏ùêí", J = "üÖπ", K = "üÖ∫", L = "üÖª", 
    M = "üÖº", N = "üÖΩ", O = "üÖæ", P = "üÖø", 
    Q = "üÜÄ", R = "üÜÅ", S = "üÜÇùêí", T = "üÜÉ", 
    U = "üÜÑùêí", V = "üÜÖ", W = "üÜÜ", X = "üÜá", 
    Y = "üÜàùêí", Z = "üÜâ",
    a = "üÖ∞", b = "üÖ±", c = "üÖ≤", d = "üÖ≥", 
    e = "üÖ¥", f = "üÖµ", g = "üÖ∂ùêí", h = "üÖ∑", 
    i = "üÖ∏ùêí", j = "üÖπ", k = "üÖ∫", l = "üÖª", 
    m = "üÖº", n = "üÖΩ", o = "üÖæ", p = "üÖø", 
    q = "üÜÄ", r = "üÜÅ", s = "üÜÇ", t = "üÜÉ", 
    u = "üÜÑùêí", v = "üÜÖ", w = "üÜÜ", x = "üÜá", 
    y = "üÜàùêí", z = "üÜâ"
}


local function replaceCharacters(input)
    local result = ""
    
    for i = 1, #input do
        local char = input:sub(i, i)
        
        if char == " " then
            result = result .. "ùêí" 
        elseif replacements[char] then
            result = result .. replacements[char]
        else
            result = result .. char
        end
    end
    
    local A_1 = "ùêí" .. result
    local A_2 = "All"
    if game:GetService("TextChatService"):FindFirstChild("TextChannels") then
        game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(A_1)
    else
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(A_1, A_2)
    end
end

-- Main frame setup
local gazerMain = Instance.new("Frame")
gazerMain.Size = UDim2.new(0.5, 0, 0.5, 0)
gazerMain.Position = UDim2.new(0.25, 0, 0.25, 0)
gazerMain.BackgroundColor3 = Color3.new(1, 1, 1)
gazerMain.BorderColor3 = Color3.new(0, 0, 0)
gazerMain.BorderSizePixel = 1
gazerMain.Active = true
gazerMain.BackgroundTransparency = 0 
gazerMain.Draggable = true
gazerMain.Parent = gui

-- Title label setup
local gazerTitle = Instance.new("TextLabel")
gazerTitle.Size = UDim2.new(1, 0, 0.2, 0)
gazerTitle.Position = UDim2.new(0, 0, 0, 0)
gazerTitle.BackgroundColor3 = Color3.new(0, 0, 0)
gazerTitle.BorderColor3 = Color3.new(0, 0, 0)
gazerTitle.BorderSizePixel = 1
gazerTitle.Text = lean .. "'s TressPasser"
gazerTitle.TextSize = 14
gazerTitle.BackgroundTransparency = 0 
gazerTitle.TextColor3 = Color3.new(1, 1, 1)
gazerTitle.Font = Enum.Font.Bodoni
gazerTitle.Parent = gazerMain

-- TextBox setup for input
local EnterName = Instance.new("TextBox")
EnterName.Size = UDim2.new(0.8, 0, 0.2, 0)
EnterName.Position = UDim2.new(0.1, 0, 0.3, 0)
EnterName.BackgroundColor3 = Color3.new(0, 0, 0)
EnterName.BorderColor3 = Color3.new(0, 0, 0)
EnterName.BorderSizePixel = 1
EnterName.PlaceholderText = "(Chat)"
EnterName.TextColor3 = Color3.new(1, 1, 1)
EnterName.BackgroundTransparency = 0
EnterName.Font = Enum.Font.Code
EnterName.Text = ""
EnterName.TextSize = 15
EnterName.Parent = gazerMain

-- Button setup for conversion
local COOLRATE = Instance.new("TextButton")
COOLRATE.Size = UDim2.new(0.3, 0, 0.2, 0)
COOLRATE.Position = UDim2.new(0.35, 0, 0.7, 0)
COOLRATE.BackgroundColor3 = Color3.new(0, 0, 0)
COOLRATE.BorderColor3 = Color3.new(0, 0, 0)
COOLRATE.BorderSizePixel = 1
COOLRATE.Text = "CLICK TO BY ASS!"
COOLRATE.TextSize = 14
COOLRATE.BackgroundTransparency = 0 
COOLRATE.TextColor3 = Color3.new(1, 1, 1)
COOLRATE.Font = Enum.Font.Code
COOLRATE.Parent = gazerMain

COOLRATE.MouseButton1Click:Connect(function()
    local inputString = EnterName.Text
    replaceCharacters(inputString)
end)
end
local Vadrift = lean .. "-Ha"

local function PLZ()
    -- G–∞z–µr code execution
    -- Place this part in StarterPlayer > StarterPlayerScripts
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")

    -- Create ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = playerGui

    -- Create a frame to hold the bar
    local frame = Instance.new("Frame")
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.Position = UDim2.new(0.5, 0, 0.5, 0)
    frame.Size = UDim2.new(0.3, 0, 0.05, 0)
    frame.Parent = screenGui

    -- Create the bar
    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(0, 0, 1, 0) -- initial size of bar
    bar.BackgroundColor3 = Color3.new(0, 1, 0) -- green color
    bar.Parent = frame

    -- Create a text label
    local textLabel = Instance.new("TextLabel")
    textLabel.Text = "(„Äí‚Å†Ôπè‚Å†„Äí‚Å†) {Plz Donate}"
    textLabel.TextSize = 20
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Position = UDim2.new(0, 0, -3, 0) -- adjust position if needed
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextColor3 = Color3.new(1, 1, 1) -- white color
    textLabel.BackgroundTransparency = 1 -- make the background invisible
    textLabel.Parent = frame

    -- Create a sound
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://9048375035" -- replace with the correct sound ID
    sound.Looped = true
    sound.Parent = screenGui
    sound:Play()

    -- Define a max loudness
    local maxLoudness = 500

    -- Animation variables
    local amplitude = 0
    local animationSpeed = 1 -- adjust speed as needed

    -- Animate the amplitude bar
    while true do
        local loudness = sound.PlaybackLoudness
        if loudness then
            amplitude = math.clamp(loudness / maxLoudness, 0, 1)
        else
            amplitude = 0
        end
        

        -- Smooth swinging animation
        local swing = 0.1 * math.sin(tick() * animationSpeed * 2 * math.pi / 3) -- swing every 3 seconds
        frame.Position = UDim2.new(0.5 + swing, 0, 0.5, 0)

        bar.Size = UDim2.new(amplitude, 0, 1, 0)
        wait(0.05)
    end
    end
    





local function LowFps()
game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Function to apply the low FPS effect to animations
local function applyLowFPSEffect(animationTrack)
    local originalSpeed = animationTrack.Speed

    while animationTrack.IsPlaying do
    if animationTrack.Speed <= originalSpeed then
   local originalSpeed = animationTrack.Speed 
   end
        task.wait(0.1) -- Freeze the animation for 0.05 seconds
        animationTrack:AdjustSpeed(originalSpeed * 2) -- Double the speed temporaril
        task.wait(0.1)
        animationTrack:AdjustSpeed(0) -- Pause again
    end
end

-- Function to monitor animation tracks
local function monitorAnimations(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.AnimationPlayed:Connect(function(animationTrack)
            applyLowFPSEffect(animationTrack)
        end)
    end
end

-- Monitor the player's character
player.CharacterAdded:Connect(monitorAnimations)
if player.Character then
    monitorAnimations(player.Character)
end
end




local CurrentIdle = "None"
local CurrentWalk = "None"
local CurrentRun = "None"
local CurrentJump = "None"
local CurrentFall = "None"
local CurrentSwimIdle = "None"
local CurrentSwim = "None"
local CurrentClimb = "None"
local HttpService = game:GetService("HttpService")


local Players = game:GetService("Players")
local speaker = Players.LocalPlayer
    local Char = speaker.Character
        local Animate = Char.Animate


local function Wait1()
 local player = game.Players.LocalPlayer
  local character = player.Character or player.CharacterAdded:Wait()
   local humanoid = character:WaitForChild("Humanoid")
    while humanoid.Health <= 2 do
      task.wait(0.2) -- Wait for 0.1 seconds before checking again
       end
        end
        
        



local function Wait2()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
    while humanoid:GetState() == Enum.HumanoidStateType.Dead or 
          humanoid:GetState() == Enum.HumanoidStateType.Ragdoll do
        wait(0.1)  -- wait for a short period before checking again
    end
end





local lastAnimations = {} -- Table to store last used animations

local function StopAnim()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end
    end

local function refresh()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    humanoid:ChangeState(Enum.HumanoidStateType.Landed)
end

local function refreshswim()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    humanoid:ChangeState(Enum.HumanoidStateType.Landed)
    task.wait(0.1)
    humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
end


local function refreshclimb()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    humanoid:ChangeState(Enum.HumanoidStateType.Landed)
    task.wait(0.1)
    humanoid:ChangeState(Enum.HumanoidStateType.Climbing)
end

-- Define the animations table with animation IDs
local Animations = {
    Idle = {
Astronaut = {"891621366", "891633237"},
Bold = {"16738333868", "16738334710"},
Borock = {"3293641938", "3293642554"},
Bubbly = {"910004836", "910009958"},
Cartoony = {"742637544", "742638445"},
Confident = {"1069977950", "1069987858"},
Cowboy = {"1014390418", "1014398616"},
DrollingZombie = {"3489171152", "3489171152"},
Elder = {"10921101664", "10921102574"},
Ghost = {"616006778","616008087"},
Knight = {"657595757", "657568135"},
Levitation = {"616006778", "616008087"},
Mage = {"707742142", "707855907"},
MrToilet = {"4417977954", "4417978624"},
Ninja = {"656117400", "656118341"},
OldSchool = {"10921230744", "10921232093"},
Patrol = {"1149612882", "1150842221"},
Pirate = {"750781874", "750782770"},
Popstar = {"1212900985", "1150842221"},
Princess = {"941003647", "941013098"},
R6 = {"12521158637","12521162526"},
R15Reanimated = {"4211217646", "4211218409"},
Realistic = {"17172918855", "17173014241"},
Robot = {"616088211", "616089559"},
Sneaky = {"1132473842", "1132477671"},
Sports = {"18537376492", "18537371272"},
Stylish = {"616136790", "616138447"},
StylizedFemale = {"4708191566", "4708192150"},
Superhero = {"616111295", "616113536"},
Toy = {"782841498", "782845736"},
Udzal = {"3303162274", "3303162549"},
Vampire = {"1083445855", "1083450166"},
Werewolf = {"1083195517", "1083214717"},
Zombie = {"616158929", "616160636"},
    },
    Walk = {
The2016Anims = "387947975",
Astronaut = "891667138",
Bold = "16738340646",
Bubbly = "910034870",
Cartoony = "742640026",
Confident = "1070017263",
Cowboy = "1014421541",
DrollingZombie = "3489173414",
Elder = "10921111375",
Ghost = "616013216",
Knight = "10921127095",
Levitation = "616013216",
Mage = "707897309",
Ninja = "656121766",
OldSchool = "10921244891",
Patrol = "1151231493",
Pirate = "750785693",
Popstar = "1212980338",
Princess = "941028902",
R6 = "12518152696",
R15Reanim = "4211223236",
Robot = "616095330",
Sneaky = "1132510133",
Sports = "18537392113",
Stylish = "616146177",
StylizedFemale = "4708193840",
Superhero = "6161222876",
Toy = "782843345",
Udzal = "3303162967",
Vampire = "1083473930",
Werewolf = "1083178339",
Zombie = "616168032",
    },
    Run = {
The2016Anims = "387947975",
Astronaut = "10921039308",
Bold = "16738337225",
Bubbly = "10921057244",
Cartoony = "10921076136",
Confident = "1070001516",
Cowboy = "1014401683",
DrollingZombie = "3489173414",
Elder = "10921104374",
Ghost = "616013216",
HeavyRun = "3236836670",
Knight = "10921121197",
Levitation = "616010382",
Mage = "10921148209",
MrToilet = "4417979645",
Ninja = "656118852",
OldSchool = "10921240218",
Patrol = "1150967949",
Pirate = "750783738",
Popstar = "1212980348",
Princess = "941015281",
R15Reanim = "4211220381",
R6 = "12518152696",
Robot = "10921250460",
Sneaky = "1132494274",
Sports = "18537384940",
Stylish = "10921276116",
StylizedFemale = "4708192705",
Superhero = "10921291831",
Toy = "10921306285",
Vampire = "10921320299",
Werewolf = "10921336997",
Zombie = "616163682",
    },
    Jump = {
    Astronaut = "891627522",
    Bold = "16738336650",
    Bubbly = "910016857",
    Cartoony = "742637942",
    Confident = "1069984524",
    Cowboy = "1014394726",
    Elder = "10921107367",
    Ghost = "616008936",
    Knight = "910016857",
    Levitation = "616008936",
    Mage = "10921149743",
    Ninja = "656117878",
    OldSchool = "10921242013",
    Patrol = "1148811837",
    Pirate = "750782230",
    Popstar = "1212954642",
    Princess = "941008832",
    Robot = "616090535",
    R15Reanim = "4211219390",
    R6 = "12520880485",
    Sneaky = "1132489853",
    Sports = "18537380791",
    Stylish = "616139451",
    StylizedFemale = "4708188025",
    Superhero = "616115533",
    Toy = "10921308158",
    Vampire = "1083455352",
    Werewolf = "1083218792",
},
    Fall = {
    Astronaut = "891617961",
    Bold = "16738333171",
    Bubbly = "910001910",
    Cartoony = "742637151",
    Confident = "1069973677",
    Cowboy = "1014384571",
    Elder = "10921105765",
    Knight = "10921122579",
    Levitation = "616005863",
    Mage = "707829716",
    Ninja = "656115606",
    OldSchool = "10921241244",
    Patrol = "1148863382",
    Pirate = "750780242",
    Popstar = "1212900995",
    Princess = "941000007",
    Robot = "616087089",
    R15Reanim = "4211216152",
    R6 = "12520972571",
    Sneaky = "1132469004",
    Sports = "18537367238",
    Stylish = "616134815",
    StylizedFemale = "4708186162",
    Superhero = "616108001",
    Toy = "782846423",
    Vampire = "1083443587",
    Werewolf = "1083189019",
},
    SwimIdle = {
    Astronaut = "891663592",
    Bold = "16738339817",
    Bubbly = "910030921",
    Cartoony = "10921079380",
    Confident = "1070012133",
    CowBoy = "1014411816",
    Elder = "10921110146",
    Mage = "707894699",
    Ninja = "656118341",
    Patrol = "1151221899",
    Knight = "10921125935",
    OldSchool = "10921244018",
    Levitation = "10921139478",
    Patrol = "1151221899",
    Popstar = "1212998578",
    Princess = "941025398",
    Pirate = "750785176",
    R6 = "12518152696",
    Robot = "10921253767",
    Sneaky = "1132506407",
    Sports = "18537387180",
    Stylish = "10921281964",
    Stylized = "4708190607",
    SuperHero = "10921297391",
    Toy = "10921310341",
    Vampire = "10921325443",
    Werewolf ="10921341319",
    
    
},
    Swim = {
    Astronaut = "891663592",
    Bubbly = "910028158",
    Bold = "16738339158",
    Cartoony = "10921079380",
    CowBoy = "1014406523",
    Confident = "1070009914",
    Elder = "10921108971",
    Knight = "10921125160",
    Mage = "707876443",
    OldSchool = "10921243048",
    PopStar = "1212998578",
    Princess = "941018893",
    Pirate = "750784579",
    Patrol = "1151204998",
    R6 = "12518152696",
    Robot = "10921253142",
    Levitation = "10921138209",
    Stylish = "10921281000",
    SuperHero = "10921295495",
    Sneaky = "1132500520",
    Sports = "18537389531",
    Toy = "10921309319",
    Vampire = "10921324408",
    Werewolf = "10921340419",
    Zombie = "616165109",
    
},
   Climb = {
Astronaut = "10921032124",
Bold = "16738332169",
Cartoony = "742636889",
Confident = "1069946257",
CowBoy = "1014380606",
Elder = "845392038",
Ghost = "616003713",
Knight = "10921125160",
Levitation = "10921132092",
Mage = "707826056",
Ninja = "656114359",
OldSchool = "10921229866",
Patrol = "1148811837",
Popstar = "1213044953",
Princess = "940996062",
R6 = "12520982150",
R15Reanim = "4211214992",
Robot = "616086039",
Sneaky = "1132461372",
Sports = "18537363391",
Stylish = "10921271391",
StylizedFemale = "4708184253",
SuperHero = "10921286911",
Toy = "10921300839",
Vampire = "1083439238",
WereWolf = "10921329322",
Zombie = "616156119"
}}

local function Buy(gamePassID)
    local MarketplaceService = game:GetService("MarketplaceService")
    local success, errorMessage = pcall(function()
        MarketplaceService:PromptGamePassPurchase(game:GetService("Players").LocalPlayer, gamePassID)
    end)
    
    if not success then
        setclipboard("https://www.roblox.com/game-pass/" .. gamePassID)
        warn("Error prompting game pass purchase: " .. errorMessage)
    end
end

-- Function to reset idle animation
local function ResetIdle()

    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
    
        v:Stop()
    end

    -- Disable idle Animation
    local Animate = Char.Animate
    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=0"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=0"
end

-- Function to reset walk animation
local function ResetWalk()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end

    -- Disable walk Animation
    local Animate = Char.Animate
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
    
end

-- Function to reset run animation

local function ResetRun()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end

    -- Wait for a short duration
    wait(0.1)

    -- Disable run Animation
    local Animate = Char.Animate
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
    
end

local function ResetJump()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end

    -- Wait for a short duration
    wait(0.1)

    -- Disable jump Animation
    local Animate = Char.Animate
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
    
end

-- Function to reset fall animation
local function ResetFall()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end

    -- Disable fall Animation
    local Animate = Char.Animate
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
    
end

local function ResetSwim()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end

    -- Disable swim Animation
    local Animate = Char.Animate
    Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=0"
    
end

-- Function to reset swim idle animation
local function ResetSwimIdle()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end

    -- Disable swim idle Animation
    local Animate = Char.Animate
    Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=0"
    
end


local function ResetClimb()
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

    -- Stop all playing animation tracks
    for _, v in next, Hum:GetPlayingAnimationTracks() do
    
        v:Stop()
    end

    -- Disable swim idle Animation
    local Animate = Char.Animate
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=0"
    
end

-- Function to set swim animation based on animation ID
local function setSwimAnimation(animationId)
    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Animate = Char:FindFirstChild("Animate")

    if not Animate then return end

    lastAnimations.Swim = animationId
    ResetSwim()
    Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
    refreshswim()
end

-- Function to set animation based on animation type and ID
local function setAnimation(animationType, animationId)
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true


    local speaker = Players.LocalPlayer
    local Char = speaker.Character
    local Animate = Char:FindFirstChild("Animate")

    if not Animate then return end

    if animationType == "Idle" then
        lastAnimations.Idle = animationId
        
        ResetIdle()
        Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId[1]
        Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId[2]
        refresh()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
    elseif animationType == "Walk" then
        lastAnimations.Walk = animationId
        ResetWalk()
        Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
        refresh()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        
    elseif animationType == "Run" then
        lastAnimations.Run = animationId
        ResetRun()
        Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
        refresh()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        
    elseif animationType == "Jump" then
        lastAnimations.Jump = animationId
        ResetJump()
        Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
        refresh()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        
    elseif animationType == "Fall" then
        lastAnimations.Fall = animationId
        ResetFall()
           Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
        refresh()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        
    elseif animationType == "Swim" then
    lastAnimations.Swim = animationId
    ResetSwim()
    Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
    refreshswim()
elseif animationType == "SwimIdle" then
    lastAnimations.SwimIdle = animationId
    ResetSwimIdle()
    Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
    refreshswim()
    elseif animationType == "Climb" then
    lastAnimations.Climb = animationId
    ResetClimb()
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=" .. animationId
    refreshclimb()
end  
end

local function Reset1Anim()
ResetIdle()
ResetWalk()
ResetRun()
ResetJump()
ResetFall()
end





local function PlayR6Emote(animationId)
StopAnim()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://" .. animationId
    local animationTrack = humanoid:LoadAnimation(animation)
    animationTrack:Play()
    local function onMoved()
        if humanoid.MoveDirection.Magnitude > 0 then
            animationTrack:Stop()
        end
    end
    local checkMovement
    checkMovement = game:GetService("RunService").RenderStepped:Connect(onMoved)
end





local function UpdaLabel(type,name)
if type == "Idle" then
        CurrentIdle = name
    elseif type == "Walk" then
        CurrentWalk = name
    elseif type == "Run" then
        CurrentRun = name
    elseif type == "Jump" then
        CurrentJump = name
    elseif type == "Fall" then
        CurrentFall = name
    elseif type == "SwimIdle" then
        CurrentSwimIdle = name
    elseif type == "Swim" then
    CurrentSwim = name
    elseif type == "Climb" then
    CurrentClimb = name
    end
IdleLabel:UpdateLabel("Current Idle Animation = " .. CurrentIdle)
WalkLabel:UpdateLabel("Current Walk Animation = " .. CurrentWalk)
RunLabel:UpdateLabel("Current Run Animation = " .. CurrentRun)
JumpLabel:UpdateLabel("Current Jump Animation = " .. CurrentJump)
FallLabel:UpdateLabel("Current Fall Animation = " .. CurrentFall)
SwimIdleLabel:UpdateLabel("Current Swim Idle Animation = " .. CurrentSwimIdle)
SwimLabel:UpdateLabel("Current Swim Animation = " .. CurrentSwim)         
ClimbLabel:UpdateLabel("Current Climb Animation = " .. CurrentClimb)
end
       
                
                
                  
                  
-- Function to create button in specified tab
local function createButton(tab, text, animationType, animationId)
    tab:CreateButton(text, "Change " .. animationType .. " to " .. text , function()
  setAnimation(animationType, animationId)
  UpdaLabel(animationType, text)
  end)
  end
  
  
local function SendNotification(title, text)
	if syn and syn.toast_notification then
		syn.toast_notification({
			Type = ToastType.Error,
			Title = title,
			Content = text
		})
	else
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text
		})
	end
end
local anima= "Anima"
local tion = "tion"
local secret = "Secret"
-- Create the Gazer and tabs
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/" .. Vadrift .. "/Valiant-Ui-Lib-Gazed-/main/Valiant.txt"))()

local Gazer = library:CreateWindow(lean .. " Fe " .. anima .. tion .. " (".. secret .. "!)", "2.8.0" , 17842067503)

local Tab = Gazer:CreateTab("@" .. loan .. "_HA")

local Idle = Tab:CreateFrame("Idle")
Idle:CreateLabel("Idle Anim")
local Walk = Tab:CreateFrame("Walk")
local Run = Tab:CreateFrame("Run")
local Jump = Tab:CreateFrame("Jump")
local Fall = Tab:CreateFrame("Fall")
local SwimIdle = Tab:CreateFrame("Swim Idle")
local Swim = Tab:CreateFrame("Swim")
local Climb = Tab:CreateFrame("Climb")
local Info = Tab:CreateFrame("Misc")
local Emote = Tab:CreateFrame("Emotes")
local Donate = Tab:CreateFrame("Donate")

local function NEKO()
ResetIdle()
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=0"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=0"
    end
ResetWalk()
ResetRun()
local function AddR6Emote(name, id)
    Emote:CreateButton(name, "Special R6 Emote", function()
        PlayR6Emote(id)
    end)
end

local function AddEmote(name, id, price)
    Emote:CreateButton(name, "Price = " .. (price or "N/A"), function()
        PlayEmote(name, id)
    end)
end

-- Define a local function

-- Define a function that takes another function as an argument and calls it
local function callFunction(func)
    if type(func) == "function" then
        func()
    else
        warn("The argument provided is not a function")
    end
end






local function AddDonate(Price, Id)
    Donate:CreateButton(Price .. " Robux","Donate " .. Price .. " Robux", function()
        Buy(Id)
    end)
end

Info:CreateLabel("Animation Status:")
IdleLabel = Info:CreateLabel("Current Idle Animation = None")
WalkLabel = Info:CreateLabel("Current Walk Animation = None")
RunLabel = Info:CreateLabel("Current Run Animation = None")
JumpLabel = Info:CreateLabel("Current Jump Animation = None")
FallLabel = Info:CreateLabel("Current Fall Animation = None")
SwimIdleLabel = Info:CreateLabel("Current Swim Idle Animation = None")
SwimLabel = Info:CreateLabel("Current Swim Animation = None")
ClimbLabel = Info:CreateLabel("Current Climb Animation = None")
Info:CreateButton(lean .. " Discord Server", "Join My Discord Server", function()
setclipboard("https://discord.com/invite/SmFPVYjHYy")
end)
Info:CreateLabel("UI : Valiant UI")
Emote:CreateLabel("R6 Emote (Can Be Played On R15)")
AddR6Emote("Dance 1", 12521009666)
AddR6Emote("Dance 2", 12521169800)
AddR6Emote("Dance 3", 12521178362)
AddR6Emote("Cheer", 12521021991)
AddR6Emote("Laugh", 12521018724)
AddR6Emote("Point", 12521007694)
AddR6Emote("Wave", 12521004586)


Emote:CreateLabel("Unreleased Emote")
AddEmote("Arm Wave", 5915773155)
AddEmote("Head Banging", 5915779725)
AddEmote("Face Calisthenics", 9830731012)

local EmoteLabel = Emote:CreateLabel("Emote <Test>")





for name, ids in pairs(Animations.Idle) do
    createButton(Idle, name, "Idle", ids)
  
end

for name, id in pairs(Animations.Walk) do
    createButton(Walk, name, "Walk", id)
   
end

for name, id in pairs(Animations.Run) do
    createButton(Run, name, "Run", id)
    
end

for name, id in pairs(Animations.Jump) do
    createButton(Jump, name, "Jump", id)
   
end

for name, id in pairs(Animations.Fall) do
    createButton(Fall, name, "Fall", id)
 
end

for name, id in pairs(Animations.SwimIdle) do
    createButton(SwimIdle, name, "SwimIdle", id)

end

for name, id in pairs(Animations.Swim) do
    createButton(Swim, name, "Swim", id)

end

for name, id in pairs(Animations.Climb) do
    createButton(Climb, name, "Climb", id)
    
end

createButton(SwimIdle, "Added Later", "Idle", "69")
createButton(Swim, "Added Later", "Idle", "69")
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = lean .. "",
    Text = "Animation has been fully loaded!",
    Duration = 10
})



Players.LocalPlayer.CharacterAdded:Connect(function(character)
Wait1()
Wait2()


wait()
    if lastAnimations.Idle then
    setAnimation("Idle", lastAnimations.Idle)
end

if lastAnimations.Walk then
    setAnimation("Walk", lastAnimations.Walk)
end

if lastAnimations.Run then
    setAnimation("Run", lastAnimations.Run)
end

if lastAnimations.Jump then
    setAnimation("Jump", lastAnimations.Jump)
end

if lastAnimations.Fall then
    setAnimation("Fall", lastAnimations.Fall)
end

if lastAnimations.Climb then
    setAnimation("Climb", lastAnimations.Climb)
end

if lastAnimations.Swim then
    setAnimation("Swim", lastAnimations.Swim)
end

if lastAnimations.SwimIdle then
    setAnimation("SwimIdle", lastAnimations.SwimIdle)
end

end)

-- Notify credits
local function Notify(content)
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = lean .. "",
    Text = content,
    Duration = 5
})
end

Donate:CreateLabel("Copy Gamepass Link")
Donate:CreateLabel("Or Buy (if supported)")
AddDonate(2, 844706573)
AddDonate(7, 844634872)
AddDonate(10, 843153917)
AddDonate(20, 843481098)
AddDonate(27, 843315711)
AddDonate(50, 843288679)
AddDonate(100, 843403232)
AddDonate(150, 843371492)
AddDonate(200, 843443024)
AddDonate(250, 843132879)

-- Create a frame for secret input
local Secret = Tab:CreateFrame("Secret")
GayLabel = Secret:CreateLabel(" ")

-- Create a box for secret code input
GayBox = Secret:CreateBox("Secret Code..", 10044538000, function(arg)
    if arg ~= "DEVMODE1291" and arg ~= "LAG" and arg ~= "PLZ" and arg ~= "S0N1C" and arg ~= "N3K0!" and arg ~= "bypassio" then
        Notify("Wrong Key Given: " .. arg)
        
        GayLabel:UpdateLabel("Join Discord To Get Secret Codes")
        wait(1)
        GayLabel:UpdateLabel(" ")
     elseif arg == "S0N1C" then
     Secret:CreateButton("Code : SONIC","SONIC SPEED! R6 ONLY", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/uacVtsWe'))()
    end)
    elseif arg == "DEVM0DE1" then
        Notify("Bro Thinks He's G–∞z–µr Ha :skull:")
    elseif arg == "LAG" then
    GayLabel:UpdateLabel("FE LOW FPS ANIMATION")
    Secret:CreateButton("Code : LAG","Lower Ur Animation Fps", function()
    LowFps()
    end)
    
    elseif arg == "N3K0!" then
    Secret:CreateButton("Code : NEKO!",lean .. " Version Of Neko", function()
    NEKO()
     end)
     
    elseif arg == "PLZ" then
    Secret:CreateButton("Code : PLZ","Donate..", function()
    PLZ()
    end)
    
    elseif arg == "bypassio" then
    Secret:CreateButton("Code : bypassio","Spawn Chat Bypass GUI", function()
    bypassio()
    end)
    
   
       end
       end)
   
